/* // Funão delay aciona o .then após 1s
const delay = () => new Promise(resolve => setTimeout(resolve, 1000));

function umPorSegundo() {
    delay().then(() => {
        console.log('1s');
        delay().then(() => {
            console.log('2s');
            delay().then(() => {
                console.log('3s');
            });
        })
    });
}
umPorSegundo(); */

var timer_interval = performance.now();

const novoDelay = function() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            resolve('s');
        }, 1000);
    });
}

async function exeDelay() {
    console.log('1' + await novoDelay());
    console.log('2' + await novoDelay());
    console.log('3' + await novoDelay());
}

//exeDelay();

import axios from 'axios';

function getUserFromGithub(user) {
    axios.get(`https://api.github.com/users/${user}`)
        .then(response => {
            console.log(response.data);
        })
        .catch(err => {
            console.log('Usuário não existe');
        })
}
//getUserFromGithub('diego3g');
//getUserFromGithub('diego3g124123');

class ApiGit {
    static async getUserFromGithub(username) {
        try {
            const response = await axios.get(`https://api.github.com/users/${username}`);
            console.log(response);
        } catch {
            console.log('Erro na Api Git');

        }
    }
}

//ApiGit.getUserFromGithub('rocketseat');
//ApiGit.getUserFromGithub('LuizGlomyer');


class Github {
    static getRepositories(repo) {
        axios.get(`https://api.github.com/users/${repo}/repos`)
            .then(response => {
                console.log(response.data);
            })
            .catch(err => {
                console.log('Repositório não existe');
            })
    }
}
//Github.getRepositories('Rocketseat');
//Github.getRepositories('rocketseat/dslkvmskv');

class APIGitHub {
    static async getRepositories(repo) {
        try {
            const response = await axios.get(`https://api.github.com/users/${repo}/repos`);
            console.log(response);
        } catch {
            console.log('Erro na Api GitHub');

        }
    }
}

//APIGitHub.getRepositories('Rocketseat');

const buscaUsuario1 = usuario => {
        axios.get(`https://api.github.com/users/${user}`)
            .then(response => {
                console.log(response.data);
            })
            .catch(err => {
                console.log('Usuário não existe');
            });
    }
    //buscaUsuario1('diego3g');

// D

const buscaUsuario = async usuario => {
    try {
        const response = await axios.get(`https://api.github.com/users/${usuario}`);

        console.log(response.data);
    } catch (err) {
        console.log("Usuário não existe");
    }
};

buscaUsuario("thelsandroantunes");

/*import axios from 'axios';
class API {
    static async getUSerInfo(username) {
        try {
            const response = await axios.get(`https://api.github.com/users/${username}`);
            console.log(response);
        } catch {
            console.log('ERRO NA API ');

        }
    }
}

API.getUSerInfo('thelsandroantunes');
var divElement = document.getElementById('app');
var btnElement = document.createElement('button');
var txtButton = document.createTextNode("Click Me!");
btnElement.appendChild(txtButton);


divElement.appendChild(btnElement);
console.log('Vai ' + btnElement);*/



/*const myPromise = function() {
    return new Promise((resolve, reject) => {
        setTimeout(() => resolve("OK!"), 2000)
    });
}

async function exePromise() {

    console.log(await myPromise());
    console.log(await myPromise());
    console.log(await myPromise());
}

exePromise();

async function f() {

    let promise = new Promise((resolve, reject) => {
        setTimeout(() => resolve("done!"), 2000)
    });

    let result = await promise; // wait till the promise resolves (*)
    console.log(result);
    console.log(result);
    console.log(result);
    alert(result); // "done!"
}

f();*/
/*****************************************************/

/*
//REST

const novo = {
    name: 'Thelsandro',
    age: 32,
    empresa: 'Rocketseat'
};

const { name, ...resto } = novo;

console.log(name);


//SPREAD
const arr1 = [1, 2, 3];
const arr2 = [4, 5, 6];

const arr3 = [...arr1, ...arr2];

console.log(arr3);


const usuario1 = {
    nome: 'Mahdi',
    idade: 6997,
    empresa: 'Rocketseat',
};

const usuario2 = {...usuario1, nome: 'Thelsandro' };

console.log(usuario2);

const n = "Thel";
const i = 32;

console.log(`Meu nome eh ${n} e minha idade eh ${i}`);

*/

/*const user = {
    name: 'Thelsandro',
    age: 32,
    address: {
        city: 'Manaus',
        country: 'AM',
    },
};

function showName({ name, age }) {
    console.log(name, age);

}

showName(user);

const array = [1, 3, 6, 7, 9];

const newArray = array.map(item => item * 2);

console.log(newArray);

const teste = () => {
    return "testing";
}

console.log(teste());*/


/*class List {
    constructor() {
        this.data = [];
    }

    add(data) {
        this.data.push(data);
        console.log(this.data);

    }
}


class TodoList extends List {
    constructor() {
        super();

        this.usuario = 'Thelsandro';
    }

    mostraUsuario() {
        console.log(this.usuario);

    }
}

const MinhaLista = new TodoList();

document.getElementById('novotodo').onclick = function() {
    MinhaLista.add(' Novo todo');
}


MinhaLista.mostraUsuario();*/
/*
const arr = [1, 3, 6, 7, 9];

const newArr = arr.map(function(item, index) {
    return item + index;
});

console.log(newArr);


const sum = arr.reduce(function(total, next) {
    return total + next;
});

console.log(sum);

const filter = arr.filter(function(item) {
    return item % 2 === 0;
});

console.log(filter);

const find = arr.find(function(item) {
    return item === 6;
});


console.log(find); */




//"dev": "babel ./main.js -o ./bundle.js -w",
        "dev2": "babel ./desafio01.js -o ./bundle01.js -w"